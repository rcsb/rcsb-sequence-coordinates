# Default values for rcsb-sequence-coordinates chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2
revisionHistoryLimit: 3

# vaultSecretStoreName is the name of the ClusterSecretStore resource to pull secret credentials
vaultSecretStoreName: "rcsb-vault"

# Define container liveness and readiness checks
# A Pod is considered "live" when it is able to respond to client requests.
# A Pod is considered "ready" when it has completed initialization and should be one of the backends for a K8s Service resource.
initialLivenessDelaySeconds: 120
livenessProbe:
  http:
    path: /
  failureThreshold: 4
  periodSeconds: 30

initialReadinessDelaySeconds: 120
readinessProbe:
  http:
    path: /actuator/health
  failureThreshold: 6
  periodSeconds: 30

image:
  repository: harbor.devops.k8s.rcsb.org/rcsb/rcsb-sequence-coordinates
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: "harbor-docker-registry-conf"

deploymentStrategy:
  #https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  #Type is either RollingUpdate or Recreate
  type: "RollingUpdate"
  #For rolling update, what percentage of total pods can be created above desired amount
  maxSurge: 25%
  #For rolling update, what percentage of total pods can be brought down to update
  maxUnavailable: 25%

podSecurityContext:
  fsGroup: 33
  runAsNonRoot: true
  runAsUser: 33
  runAsGroup: 33
  seccompProfile:
    type: RuntimeDefault

containerSecurityContext:
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false

service:
  type: ClusterIP
  port: 80
  containerPort: 8080

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 8
    memory: 96Gi
  requests:
    cpu: 4
    memory: 64Gi

ingress:
  enabled: false
  className: "haproxy"
  annotations:
    cert-manager.io/cluster-issuer: rutgers-acme
    kubernetes.io/tls-acme: "true"
    haproxy.org/allow-list:
  hosts:
    - host:
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    - hosts:
      secretName:

# App specific configurations
seqcoordAppProperties:
  # mongoDwUser is the MongoDB DataWarehouse user name
  mongoDwUser: readonly
  log4j2.xml: |-
    <Configuration status="WARN" monitorInterval="30">
        <Properties>
            <Property name="PATTERN">%d{yyy-MM-dd HH:mm:ss.SSS Z} [%t] %-5level %logger{36} - %msg%n</Property>
        </Properties>
        <Appenders>
            <Console name="console" target="SYSTEM_OUT">
              <PatternLayout pattern="${PATTERN}"/>
            </Console>
        </Appenders>
        <Loggers>
            <Root level="info">
                <AppenderRef ref="console"/>
            </Root>
        </Loggers>
    </Configuration>
  seqcoord.a.app.properties:
  seqcoord.b.app.properties:

javaOptions: "-Xmx20g -server -Dspring.config.additional-location=/var/www -Dlog4j.configurationFile=/var/www/log4j2.xml"

elasticAPM:
  elasticAPMEnabled: false
  elasticAPMImage: docker.elastic.co/observability/apm-agent-java:1.51.0
  elasticAPMServerUrl: http://apm.devops:8200
  elasticAPMEnvironment: